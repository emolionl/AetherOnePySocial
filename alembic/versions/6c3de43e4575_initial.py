"""initial

Revision ID: 6c3de43e4575
Revises: 
Create Date: 2025-01-30 12:52:43.401550

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6c3de43e4575'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('local_id', sa.Integer(), nullable=True),
    sa.Column('machine_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('last_change', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cases_id'), 'cases', ['id'], unique=False)
    op.create_index(op.f('ix_cases_name'), 'cases', ['name'], unique=False)
    op.create_table('catalog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('author', sa.String(), nullable=True),
    sa.Column('import_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_catalog_id'), 'catalog', ['id'], unique=False)
    op.create_index(op.f('ix_catalog_name'), 'catalog', ['name'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('rates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('signature', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('catalog_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['catalog_id'], ['catalog.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('signature')
    )
    op.create_index(op.f('ix_rates_id'), 'rates', ['id'], unique=False)
    op.create_table('session_keys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('key', sa.UUID(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('local_session_id', sa.Integer(), nullable=True),
    sa.Column('used', sa.Boolean(), nullable=True),
    sa.Column('used_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key'),
    sa.UniqueConstraint('user_id'),
    sa.UniqueConstraint('user_id', 'key', name='_user_key_uc')
    )
    op.create_index(op.f('ix_session_keys_id'), 'session_keys', ['id'], unique=False)
    op.create_table('session_raw',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('machine_id', sa.String(), nullable=False),
    sa.Column('key_id', sa.Integer(), nullable=True),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('raw', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['key_id'], ['session_keys.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_session_raw_id'), 'session_raw', ['id'], unique=False)
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('local_id', sa.Integer(), nullable=True),
    sa.Column('machine_id', sa.String(), nullable=True),
    sa.Column('intention', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('case_id', sa.Integer(), nullable=True),
    sa.Column('key_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['case_id'], ['cases.id'], ),
    sa.ForeignKeyConstraint(['key_id'], ['session_keys.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key_id', 'user_id', 'machine_id', name='_key_user_machine_uc')
    )
    op.create_index(op.f('ix_sessions_id'), 'sessions', ['id'], unique=False)
    op.create_table('analysis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('local_id', sa.Integer(), nullable=True),
    sa.Column('machine_id', sa.String(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('target_gv', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('catalog_id', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['catalog_id'], ['catalog.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_analysis_id'), 'analysis', ['id'], unique=False)
    op.create_table('rate_analysis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('local_id', sa.Integer(), nullable=True),
    sa.Column('machine_id', sa.String(), nullable=True),
    sa.Column('signature', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('catalog_id', sa.Integer(), nullable=True),
    sa.Column('analysis_id', sa.Integer(), nullable=True),
    sa.Column('energetic_value', sa.Integer(), nullable=True),
    sa.Column('gv', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('potencyType', sa.String(), nullable=True),
    sa.Column('potency', sa.Integer(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['analysis.id'], ),
    sa.ForeignKeyConstraint(['catalog_id'], ['catalog.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rate_analysis_id'), 'rate_analysis', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_rate_analysis_id'), table_name='rate_analysis')
    op.drop_table('rate_analysis')
    op.drop_index(op.f('ix_analysis_id'), table_name='analysis')
    op.drop_table('analysis')
    op.drop_index(op.f('ix_sessions_id'), table_name='sessions')
    op.drop_table('sessions')
    op.drop_index(op.f('ix_session_raw_id'), table_name='session_raw')
    op.drop_table('session_raw')
    op.drop_index(op.f('ix_session_keys_id'), table_name='session_keys')
    op.drop_table('session_keys')
    op.drop_index(op.f('ix_rates_id'), table_name='rates')
    op.drop_table('rates')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_catalog_name'), table_name='catalog')
    op.drop_index(op.f('ix_catalog_id'), table_name='catalog')
    op.drop_table('catalog')
    op.drop_index(op.f('ix_cases_name'), table_name='cases')
    op.drop_index(op.f('ix_cases_id'), table_name='cases')
    op.drop_table('cases')
    # ### end Alembic commands ###
